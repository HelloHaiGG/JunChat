// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dial.proto

package common

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Ping                 string   `protobuf:"bytes,1,opt,name=Ping,proto3" json:"Ping,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a069c9ea7f963b8, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetPing() string {
	if m != nil {
		return m.Ping
	}
	return ""
}

type Response struct {
	Pong                 string   `protobuf:"bytes,1,opt,name=Pong,proto3" json:"Pong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a069c9ea7f963b8, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetPong() string {
	if m != nil {
		return m.Pong
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "common.Request")
	proto.RegisterType((*Response)(nil), "common.Response")
}

func init() { proto.RegisterFile("dial.proto", fileDescriptor_5a069c9ea7f963b8) }

var fileDescriptor_5a069c9ea7f963b8 = []byte{
	// 132 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xc9, 0x4c, 0xcc,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4b, 0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0x53, 0x92,
	0xe5, 0x62, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0x09, 0xc8, 0xcc,
	0x4b, 0x97, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0xe4, 0xb8, 0x38, 0x82, 0x52,
	0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0xc1, 0xf2, 0xf9, 0x48, 0xf2, 0xf9, 0x79, 0xe9, 0x46, 0xd6,
	0x5c, 0x9c, 0x01, 0x20, 0xf3, 0x5c, 0x32, 0x13, 0x73, 0x84, 0xf4, 0xb8, 0xd8, 0x43, 0x8a, 0x2a,
	0xc1, 0x4c, 0x7e, 0x3d, 0x88, 0xf9, 0x7a, 0x50, 0xc3, 0xa5, 0x04, 0x10, 0x02, 0x10, 0xe3, 0x94,
	0x18, 0x92, 0xd8, 0xc0, 0x4e, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x0c, 0xda, 0x3e,
	0x98, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProtoDialClient is the client API for ProtoDial service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProtoDialClient interface {
	TryDial(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type protoDialClient struct {
	cc grpc.ClientConnInterface
}

func NewProtoDialClient(cc grpc.ClientConnInterface) ProtoDialClient {
	return &protoDialClient{cc}
}

func (c *protoDialClient) TryDial(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/common.ProtoDial/TryDial", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProtoDialServer is the server API for ProtoDial service.
type ProtoDialServer interface {
	TryDial(context.Context, *Request) (*Response, error)
}

// UnimplementedProtoDialServer can be embedded to have forward compatible implementations.
type UnimplementedProtoDialServer struct {
}

func (*UnimplementedProtoDialServer) TryDial(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TryDial not implemented")
}

func RegisterProtoDialServer(s *grpc.Server, srv ProtoDialServer) {
	s.RegisterService(&_ProtoDial_serviceDesc, srv)
}

func _ProtoDial_TryDial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoDialServer).TryDial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.ProtoDial/TryDial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoDialServer).TryDial(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProtoDial_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common.ProtoDial",
	HandlerType: (*ProtoDialServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TryDial",
			Handler:    _ProtoDial_TryDial_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dial.proto",
}
