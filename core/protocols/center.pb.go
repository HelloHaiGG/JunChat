// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: center.proto

package core

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//获取
type GetServerByIdParams struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Category             int32    `protobuf:"varint,3,opt,name=Category,proto3" json:"Category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServerByIdParams) Reset()         { *m = GetServerByIdParams{} }
func (m *GetServerByIdParams) String() string { return proto.CompactTextString(m) }
func (*GetServerByIdParams) ProtoMessage()    {}
func (*GetServerByIdParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{0}
}
func (m *GetServerByIdParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetServerByIdParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetServerByIdParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetServerByIdParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServerByIdParams.Merge(m, src)
}
func (m *GetServerByIdParams) XXX_Size() int {
	return m.Size()
}
func (m *GetServerByIdParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServerByIdParams.DiscardUnknown(m)
}

var xxx_messageInfo_GetServerByIdParams proto.InternalMessageInfo

func (m *GetServerByIdParams) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetServerByIdParams) GetCategory() int32 {
	if m != nil {
		return m.Category
	}
	return 0
}

type GetServerByIdRsp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	ServerId             string   `protobuf:"bytes,2,opt,name=ServerId,proto3" json:"ServerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServerByIdRsp) Reset()         { *m = GetServerByIdRsp{} }
func (m *GetServerByIdRsp) String() string { return proto.CompactTextString(m) }
func (*GetServerByIdRsp) ProtoMessage()    {}
func (*GetServerByIdRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{1}
}
func (m *GetServerByIdRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetServerByIdRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetServerByIdRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetServerByIdRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServerByIdRsp.Merge(m, src)
}
func (m *GetServerByIdRsp) XXX_Size() int {
	return m.Size()
}
func (m *GetServerByIdRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServerByIdRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetServerByIdRsp proto.InternalMessageInfo

func (m *GetServerByIdRsp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetServerByIdRsp) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

//获取房间内成员列表
type GetMembersParams struct {
	Rid                  string   `protobuf:"bytes,1,opt,name=Rid,proto3" json:"Rid,omitempty"`
	ServerId             string   `protobuf:"bytes,2,opt,name=ServerId,proto3" json:"ServerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMembersParams) Reset()         { *m = GetMembersParams{} }
func (m *GetMembersParams) String() string { return proto.CompactTextString(m) }
func (*GetMembersParams) ProtoMessage()    {}
func (*GetMembersParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{2}
}
func (m *GetMembersParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetMembersParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetMembersParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetMembersParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMembersParams.Merge(m, src)
}
func (m *GetMembersParams) XXX_Size() int {
	return m.Size()
}
func (m *GetMembersParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMembersParams.DiscardUnknown(m)
}

var xxx_messageInfo_GetMembersParams proto.InternalMessageInfo

func (m *GetMembersParams) GetRid() string {
	if m != nil {
		return m.Rid
	}
	return ""
}

func (m *GetMembersParams) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

type GetMembersRsp struct {
	Count                int32    `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	Ids                  []string `protobuf:"bytes,2,rep,name=Ids,proto3" json:"Ids,omitempty"`
	OnlineCount          int32    `protobuf:"varint,3,opt,name=OnlineCount,proto3" json:"OnlineCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMembersRsp) Reset()         { *m = GetMembersRsp{} }
func (m *GetMembersRsp) String() string { return proto.CompactTextString(m) }
func (*GetMembersRsp) ProtoMessage()    {}
func (*GetMembersRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{3}
}
func (m *GetMembersRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetMembersRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetMembersRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetMembersRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMembersRsp.Merge(m, src)
}
func (m *GetMembersRsp) XXX_Size() int {
	return m.Size()
}
func (m *GetMembersRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMembersRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetMembersRsp proto.InternalMessageInfo

func (m *GetMembersRsp) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetMembersRsp) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *GetMembersRsp) GetOnlineCount() int32 {
	if m != nil {
		return m.OnlineCount
	}
	return 0
}

//汇报 用户/或者断开链接 或者 已经退出登录
type ReportDisconnectParams struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ServerId             string   `protobuf:"bytes,2,opt,name=ServerId,proto3" json:"ServerId,omitempty"`
	Category             int32    `protobuf:"varint,3,opt,name=Category,proto3" json:"Category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportDisconnectParams) Reset()         { *m = ReportDisconnectParams{} }
func (m *ReportDisconnectParams) String() string { return proto.CompactTextString(m) }
func (*ReportDisconnectParams) ProtoMessage()    {}
func (*ReportDisconnectParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{4}
}
func (m *ReportDisconnectParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReportDisconnectParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReportDisconnectParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReportDisconnectParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportDisconnectParams.Merge(m, src)
}
func (m *ReportDisconnectParams) XXX_Size() int {
	return m.Size()
}
func (m *ReportDisconnectParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportDisconnectParams.DiscardUnknown(m)
}

var xxx_messageInfo_ReportDisconnectParams proto.InternalMessageInfo

func (m *ReportDisconnectParams) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReportDisconnectParams) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *ReportDisconnectParams) GetCategory() int32 {
	if m != nil {
		return m.Category
	}
	return 0
}

type ReportDisconnectRsp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportDisconnectRsp) Reset()         { *m = ReportDisconnectRsp{} }
func (m *ReportDisconnectRsp) String() string { return proto.CompactTextString(m) }
func (*ReportDisconnectRsp) ProtoMessage()    {}
func (*ReportDisconnectRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{5}
}
func (m *ReportDisconnectRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReportDisconnectRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReportDisconnectRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReportDisconnectRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportDisconnectRsp.Merge(m, src)
}
func (m *ReportDisconnectRsp) XXX_Size() int {
	return m.Size()
}
func (m *ReportDisconnectRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportDisconnectRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ReportDisconnectRsp proto.InternalMessageInfo

func (m *ReportDisconnectRsp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReportDisconnectRsp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

//汇报节点活跃信息
type ReportServerStatusParams struct {
	ServerId             string   `protobuf:"bytes,1,opt,name=ServerId,proto3" json:"ServerId,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportServerStatusParams) Reset()         { *m = ReportServerStatusParams{} }
func (m *ReportServerStatusParams) String() string { return proto.CompactTextString(m) }
func (*ReportServerStatusParams) ProtoMessage()    {}
func (*ReportServerStatusParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{6}
}
func (m *ReportServerStatusParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReportServerStatusParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReportServerStatusParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReportServerStatusParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportServerStatusParams.Merge(m, src)
}
func (m *ReportServerStatusParams) XXX_Size() int {
	return m.Size()
}
func (m *ReportServerStatusParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportServerStatusParams.DiscardUnknown(m)
}

var xxx_messageInfo_ReportServerStatusParams proto.InternalMessageInfo

func (m *ReportServerStatusParams) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *ReportServerStatusParams) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReportServerStatusRsp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportServerStatusRsp) Reset()         { *m = ReportServerStatusRsp{} }
func (m *ReportServerStatusRsp) String() string { return proto.CompactTextString(m) }
func (*ReportServerStatusRsp) ProtoMessage()    {}
func (*ReportServerStatusRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{7}
}
func (m *ReportServerStatusRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReportServerStatusRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReportServerStatusRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReportServerStatusRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportServerStatusRsp.Merge(m, src)
}
func (m *ReportServerStatusRsp) XXX_Size() int {
	return m.Size()
}
func (m *ReportServerStatusRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportServerStatusRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ReportServerStatusRsp proto.InternalMessageInfo

func (m *ReportServerStatusRsp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

//创建临时聊天室
type CreateChatRoomParams struct {
	UserId               string   `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateChatRoomParams) Reset()         { *m = CreateChatRoomParams{} }
func (m *CreateChatRoomParams) String() string { return proto.CompactTextString(m) }
func (*CreateChatRoomParams) ProtoMessage()    {}
func (*CreateChatRoomParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{8}
}
func (m *CreateChatRoomParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateChatRoomParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateChatRoomParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateChatRoomParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateChatRoomParams.Merge(m, src)
}
func (m *CreateChatRoomParams) XXX_Size() int {
	return m.Size()
}
func (m *CreateChatRoomParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateChatRoomParams.DiscardUnknown(m)
}

var xxx_messageInfo_CreateChatRoomParams proto.InternalMessageInfo

func (m *CreateChatRoomParams) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type CreateChatRoomRsp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	RoomId               string   `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	ServerId             string   `protobuf:"bytes,3,opt,name=ServerId,proto3" json:"ServerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateChatRoomRsp) Reset()         { *m = CreateChatRoomRsp{} }
func (m *CreateChatRoomRsp) String() string { return proto.CompactTextString(m) }
func (*CreateChatRoomRsp) ProtoMessage()    {}
func (*CreateChatRoomRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{9}
}
func (m *CreateChatRoomRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateChatRoomRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateChatRoomRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateChatRoomRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateChatRoomRsp.Merge(m, src)
}
func (m *CreateChatRoomRsp) XXX_Size() int {
	return m.Size()
}
func (m *CreateChatRoomRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateChatRoomRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateChatRoomRsp proto.InternalMessageInfo

func (m *CreateChatRoomRsp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateChatRoomRsp) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *CreateChatRoomRsp) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

//加入聊天室
type JoinChatRoomParams struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinChatRoomParams) Reset()         { *m = JoinChatRoomParams{} }
func (m *JoinChatRoomParams) String() string { return proto.CompactTextString(m) }
func (*JoinChatRoomParams) ProtoMessage()    {}
func (*JoinChatRoomParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{10}
}
func (m *JoinChatRoomParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JoinChatRoomParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JoinChatRoomParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JoinChatRoomParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinChatRoomParams.Merge(m, src)
}
func (m *JoinChatRoomParams) XXX_Size() int {
	return m.Size()
}
func (m *JoinChatRoomParams) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinChatRoomParams.DiscardUnknown(m)
}

var xxx_messageInfo_JoinChatRoomParams proto.InternalMessageInfo

func (m *JoinChatRoomParams) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *JoinChatRoomParams) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type JoinChatRoomRsp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinChatRoomRsp) Reset()         { *m = JoinChatRoomRsp{} }
func (m *JoinChatRoomRsp) String() string { return proto.CompactTextString(m) }
func (*JoinChatRoomRsp) ProtoMessage()    {}
func (*JoinChatRoomRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{11}
}
func (m *JoinChatRoomRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JoinChatRoomRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JoinChatRoomRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *JoinChatRoomRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinChatRoomRsp.Merge(m, src)
}
func (m *JoinChatRoomRsp) XXX_Size() int {
	return m.Size()
}
func (m *JoinChatRoomRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinChatRoomRsp.DiscardUnknown(m)
}

var xxx_messageInfo_JoinChatRoomRsp proto.InternalMessageInfo

func (m *JoinChatRoomRsp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

//获取聊天室列表
type GetChatRoomListParams struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChatRoomListParams) Reset()         { *m = GetChatRoomListParams{} }
func (m *GetChatRoomListParams) String() string { return proto.CompactTextString(m) }
func (*GetChatRoomListParams) ProtoMessage()    {}
func (*GetChatRoomListParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{12}
}
func (m *GetChatRoomListParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetChatRoomListParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetChatRoomListParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetChatRoomListParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChatRoomListParams.Merge(m, src)
}
func (m *GetChatRoomListParams) XXX_Size() int {
	return m.Size()
}
func (m *GetChatRoomListParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChatRoomListParams.DiscardUnknown(m)
}

var xxx_messageInfo_GetChatRoomListParams proto.InternalMessageInfo

type GetChatRoomListRsp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	RoomIds              []string `protobuf:"bytes,2,rep,name=RoomIds,proto3" json:"RoomIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetChatRoomListRsp) Reset()         { *m = GetChatRoomListRsp{} }
func (m *GetChatRoomListRsp) String() string { return proto.CompactTextString(m) }
func (*GetChatRoomListRsp) ProtoMessage()    {}
func (*GetChatRoomListRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_1de517c49d537f4b, []int{13}
}
func (m *GetChatRoomListRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetChatRoomListRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetChatRoomListRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetChatRoomListRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetChatRoomListRsp.Merge(m, src)
}
func (m *GetChatRoomListRsp) XXX_Size() int {
	return m.Size()
}
func (m *GetChatRoomListRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetChatRoomListRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetChatRoomListRsp proto.InternalMessageInfo

func (m *GetChatRoomListRsp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetChatRoomListRsp) GetRoomIds() []string {
	if m != nil {
		return m.RoomIds
	}
	return nil
}

func init() {
	proto.RegisterType((*GetServerByIdParams)(nil), "core.GetServerByIdParams")
	proto.RegisterType((*GetServerByIdRsp)(nil), "core.GetServerByIdRsp")
	proto.RegisterType((*GetMembersParams)(nil), "core.GetMembersParams")
	proto.RegisterType((*GetMembersRsp)(nil), "core.GetMembersRsp")
	proto.RegisterType((*ReportDisconnectParams)(nil), "core.ReportDisconnectParams")
	proto.RegisterType((*ReportDisconnectRsp)(nil), "core.ReportDisconnectRsp")
	proto.RegisterType((*ReportServerStatusParams)(nil), "core.ReportServerStatusParams")
	proto.RegisterType((*ReportServerStatusRsp)(nil), "core.ReportServerStatusRsp")
	proto.RegisterType((*CreateChatRoomParams)(nil), "core.CreateChatRoomParams")
	proto.RegisterType((*CreateChatRoomRsp)(nil), "core.CreateChatRoomRsp")
	proto.RegisterType((*JoinChatRoomParams)(nil), "core.JoinChatRoomParams")
	proto.RegisterType((*JoinChatRoomRsp)(nil), "core.JoinChatRoomRsp")
	proto.RegisterType((*GetChatRoomListParams)(nil), "core.GetChatRoomListParams")
	proto.RegisterType((*GetChatRoomListRsp)(nil), "core.GetChatRoomListRsp")
}

func init() { proto.RegisterFile("center.proto", fileDescriptor_1de517c49d537f4b) }

var fileDescriptor_1de517c49d537f4b = []byte{
	// 555 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0x63, 0xe7, 0x03, 0x3a, 0x0d, 0x26, 0x6c, 0x1a, 0xd7, 0x75, 0x91, 0x15, 0xad, 0x84,
	0x54, 0x09, 0x29, 0x07, 0x38, 0x71, 0xa2, 0x8d, 0x2b, 0x45, 0x46, 0x40, 0x90, 0x2b, 0x0e, 0x88,
	0x0b, 0x6e, 0xbc, 0x6a, 0x2d, 0x91, 0xdd, 0x68, 0xbd, 0x45, 0xca, 0x2b, 0xf0, 0x04, 0x3c, 0x12,
	0x47, 0x1e, 0x01, 0x85, 0x17, 0x41, 0xf6, 0xae, 0x1d, 0x7f, 0xe6, 0xe6, 0xf1, 0x8c, 0x7f, 0xf3,
	0x9f, 0xd1, 0x7f, 0x0c, 0xc3, 0x15, 0xa1, 0x82, 0xf0, 0xd9, 0x86, 0x33, 0xc1, 0x50, 0x6f, 0xc5,
	0x38, 0xc1, 0x57, 0x30, 0x5e, 0x10, 0x71, 0x43, 0xf8, 0x0f, 0xc2, 0xe7, 0x5b, 0x2f, 0xfc, 0x14,
	0xf0, 0x60, 0x1d, 0x23, 0x03, 0x74, 0x2f, 0xb4, 0xb4, 0xa9, 0x76, 0x71, 0xe4, 0xeb, 0x5e, 0x88,
	0x6c, 0x78, 0xec, 0x06, 0x82, 0xdc, 0x31, 0xbe, 0xb5, 0xba, 0x53, 0xed, 0xa2, 0xef, 0xe7, 0x31,
	0x9e, 0xc3, 0xa8, 0x84, 0xf0, 0xe3, 0x0d, 0x42, 0xd0, 0x73, 0x59, 0x48, 0x52, 0x42, 0xdf, 0x4f,
	0x9f, 0x13, 0x86, 0x2c, 0xf2, 0x42, 0x4b, 0x4f, 0xc9, 0x79, 0x8c, 0x2f, 0x53, 0xc6, 0x07, 0xb2,
	0xbe, 0x25, 0x3c, 0x56, 0x1a, 0x46, 0xd0, 0xf5, 0xa3, 0x4c, 0x44, 0xf2, 0x78, 0x90, 0xf0, 0x05,
	0x9e, 0xec, 0x09, 0x89, 0x84, 0x13, 0xe8, 0xbb, 0xec, 0x81, 0x0a, 0xa5, 0x41, 0x06, 0x09, 0xd4,
	0x0b, 0x63, 0x4b, 0x9f, 0x76, 0x13, 0xa8, 0x17, 0xc6, 0x68, 0x0a, 0xc7, 0x4b, 0xfa, 0x3d, 0xa2,
	0x44, 0x56, 0xcb, 0xe9, 0x8a, 0xaf, 0xf0, 0x37, 0x30, 0x7d, 0xb2, 0x61, 0x5c, 0x5c, 0x47, 0xf1,
	0x8a, 0x51, 0x4a, 0x56, 0xa2, 0x7d, 0x4d, 0x6d, 0x02, 0x0f, 0xae, 0xf0, 0x0d, 0x8c, 0xab, 0x1d,
	0xda, 0xb6, 0x68, 0x80, 0x1e, 0x65, 0x70, 0x3d, 0x0a, 0xf1, 0x47, 0xb0, 0xe4, 0xa7, 0xb2, 0xd1,
	0x8d, 0x08, 0xc4, 0x43, 0xb6, 0xc1, 0xa2, 0x1c, 0xad, 0x22, 0xc7, 0x84, 0x81, 0xac, 0x4d, 0x59,
	0x7d, 0x5f, 0x45, 0xf8, 0x25, 0x4c, 0xea, 0xbc, 0x16, 0x31, 0x78, 0x06, 0x27, 0x2e, 0x27, 0x81,
	0x20, 0xee, 0x7d, 0x20, 0x7c, 0xc6, 0xd6, 0xaa, 0xb1, 0x09, 0x83, 0xcf, 0x71, 0xa1, 0xad, 0x8a,
	0xf0, 0x57, 0x78, 0x56, 0xae, 0x6f, 0x9b, 0xd2, 0x84, 0x41, 0x92, 0xce, 0xd7, 0xa8, 0xa2, 0xd2,
	0x44, 0xdd, 0x8a, 0x03, 0xae, 0x01, 0xbd, 0x63, 0x11, 0xad, 0x4b, 0x51, 0x24, 0xad, 0x44, 0xda,
	0x4b, 0xd4, 0x4b, 0x12, 0x5f, 0xc0, 0xd3, 0x22, 0xa5, 0x6d, 0xf2, 0x53, 0x98, 0x2c, 0x88, 0xc8,
	0xaa, 0xde, 0x47, 0xb1, 0xb2, 0x04, 0x9e, 0x03, 0xaa, 0x24, 0xda, 0x66, 0xb4, 0xe0, 0x91, 0xd4,
	0x92, 0xd9, 0x31, 0x0b, 0x5f, 0xfd, 0xec, 0xc1, 0xd0, 0x4d, 0x6f, 0x55, 0x0e, 0x87, 0x2e, 0xe1,
	0x28, 0x3f, 0x31, 0x74, 0x36, 0x4b, 0x2e, 0x77, 0xd6, 0x70, 0xb6, 0xb6, 0xd9, 0x90, 0xf2, 0xe3,
	0x0d, 0xee, 0xa0, 0xb7, 0x60, 0x2c, 0x48, 0x2a, 0x49, 0x9d, 0x08, 0xda, 0xd7, 0x96, 0xce, 0xce,
	0x1e, 0x57, 0xdf, 0x4b, 0xc0, 0x12, 0xd0, 0x92, 0x16, 0xec, 0x99, 0x7a, 0x04, 0x3d, 0x97, 0xc5,
	0xcd, 0xe7, 0x61, 0x9f, 0x35, 0x67, 0x33, 0xa0, 0xb1, 0xa4, 0x52, 0xa6, 0x7b, 0x1f, 0xd0, 0x3b,
	0x82, 0x9c, 0x62, 0x79, 0xdd, 0xce, 0xf6, 0x79, 0x5b, 0x5e, 0x02, 0x17, 0x60, 0x94, 0xcd, 0x85,
	0x6c, 0xf9, 0x41, 0x93, 0x45, 0xed, 0xd3, 0xa6, 0x9c, 0x04, 0x5d, 0xc1, 0xb0, 0x68, 0x01, 0x64,
	0xc9, 0xd2, 0xba, 0xb9, 0xec, 0x49, 0x3d, 0x23, 0x11, 0x1e, 0x1c, 0x17, 0x5c, 0x80, 0xce, 0xf3,
	0x9d, 0xd6, 0x1d, 0x63, 0x1f, 0x4a, 0xe2, 0xce, 0x7c, 0xf4, 0x7b, 0xe7, 0x68, 0x7f, 0x76, 0x8e,
	0xf6, 0x77, 0xe7, 0x68, 0xbf, 0xfe, 0x39, 0x9d, 0xdb, 0x41, 0xfa, 0x03, 0x7f, 0xfd, 0x3f, 0x00,
	0x00, 0xff, 0xff, 0xb9, 0xe4, 0x7a, 0x97, 0xd0, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CenterServerClient is the client API for CenterServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CenterServerClient interface {
	//获取用户所在Server
	GetServer(ctx context.Context, in *GetServerByIdParams, opts ...grpc.CallOption) (*GetServerByIdRsp, error)
	//获取房间内成员
	GetRoomMembers(ctx context.Context, in *GetMembersParams, opts ...grpc.CallOption) (*GetMembersRsp, error)
	//断线汇报
	OnDisconnectReport(ctx context.Context, in *ReportDisconnectParams, opts ...grpc.CallOption) (*ReportDisconnectRsp, error)
	//节点通知
	OnServerChange(ctx context.Context, in *ReportServerStatusParams, opts ...grpc.CallOption) (*ReportServerStatusRsp, error)
	//创建临时聊天室
	CreateChatRoom(ctx context.Context, in *CreateChatRoomParams, opts ...grpc.CallOption) (*CreateChatRoomRsp, error)
	//加入聊天室
	JoinChatRoom(ctx context.Context, in *JoinChatRoomParams, opts ...grpc.CallOption) (*JoinChatRoomRsp, error)
	//获取聊天室列表
	GetChatRoom(ctx context.Context, in *GetChatRoomListParams, opts ...grpc.CallOption) (*GetChatRoomListParams, error)
}

type centerServerClient struct {
	cc *grpc.ClientConn
}

func NewCenterServerClient(cc *grpc.ClientConn) CenterServerClient {
	return &centerServerClient{cc}
}

func (c *centerServerClient) GetServer(ctx context.Context, in *GetServerByIdParams, opts ...grpc.CallOption) (*GetServerByIdRsp, error) {
	out := new(GetServerByIdRsp)
	err := c.cc.Invoke(ctx, "/core.CenterServer/GetServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServerClient) GetRoomMembers(ctx context.Context, in *GetMembersParams, opts ...grpc.CallOption) (*GetMembersRsp, error) {
	out := new(GetMembersRsp)
	err := c.cc.Invoke(ctx, "/core.CenterServer/GetRoomMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServerClient) OnDisconnectReport(ctx context.Context, in *ReportDisconnectParams, opts ...grpc.CallOption) (*ReportDisconnectRsp, error) {
	out := new(ReportDisconnectRsp)
	err := c.cc.Invoke(ctx, "/core.CenterServer/OnDisconnectReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServerClient) OnServerChange(ctx context.Context, in *ReportServerStatusParams, opts ...grpc.CallOption) (*ReportServerStatusRsp, error) {
	out := new(ReportServerStatusRsp)
	err := c.cc.Invoke(ctx, "/core.CenterServer/OnServerChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServerClient) CreateChatRoom(ctx context.Context, in *CreateChatRoomParams, opts ...grpc.CallOption) (*CreateChatRoomRsp, error) {
	out := new(CreateChatRoomRsp)
	err := c.cc.Invoke(ctx, "/core.CenterServer/CreateChatRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServerClient) JoinChatRoom(ctx context.Context, in *JoinChatRoomParams, opts ...grpc.CallOption) (*JoinChatRoomRsp, error) {
	out := new(JoinChatRoomRsp)
	err := c.cc.Invoke(ctx, "/core.CenterServer/JoinChatRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centerServerClient) GetChatRoom(ctx context.Context, in *GetChatRoomListParams, opts ...grpc.CallOption) (*GetChatRoomListParams, error) {
	out := new(GetChatRoomListParams)
	err := c.cc.Invoke(ctx, "/core.CenterServer/GetChatRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CenterServerServer is the server API for CenterServer service.
type CenterServerServer interface {
	//获取用户所在Server
	GetServer(context.Context, *GetServerByIdParams) (*GetServerByIdRsp, error)
	//获取房间内成员
	GetRoomMembers(context.Context, *GetMembersParams) (*GetMembersRsp, error)
	//断线汇报
	OnDisconnectReport(context.Context, *ReportDisconnectParams) (*ReportDisconnectRsp, error)
	//节点通知
	OnServerChange(context.Context, *ReportServerStatusParams) (*ReportServerStatusRsp, error)
	//创建临时聊天室
	CreateChatRoom(context.Context, *CreateChatRoomParams) (*CreateChatRoomRsp, error)
	//加入聊天室
	JoinChatRoom(context.Context, *JoinChatRoomParams) (*JoinChatRoomRsp, error)
	//获取聊天室列表
	GetChatRoom(context.Context, *GetChatRoomListParams) (*GetChatRoomListParams, error)
}

// UnimplementedCenterServerServer can be embedded to have forward compatible implementations.
type UnimplementedCenterServerServer struct {
}

func (*UnimplementedCenterServerServer) GetServer(ctx context.Context, req *GetServerByIdParams) (*GetServerByIdRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServer not implemented")
}
func (*UnimplementedCenterServerServer) GetRoomMembers(ctx context.Context, req *GetMembersParams) (*GetMembersRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoomMembers not implemented")
}
func (*UnimplementedCenterServerServer) OnDisconnectReport(ctx context.Context, req *ReportDisconnectParams) (*ReportDisconnectRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnDisconnectReport not implemented")
}
func (*UnimplementedCenterServerServer) OnServerChange(ctx context.Context, req *ReportServerStatusParams) (*ReportServerStatusRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnServerChange not implemented")
}
func (*UnimplementedCenterServerServer) CreateChatRoom(ctx context.Context, req *CreateChatRoomParams) (*CreateChatRoomRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateChatRoom not implemented")
}
func (*UnimplementedCenterServerServer) JoinChatRoom(ctx context.Context, req *JoinChatRoomParams) (*JoinChatRoomRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinChatRoom not implemented")
}
func (*UnimplementedCenterServerServer) GetChatRoom(ctx context.Context, req *GetChatRoomListParams) (*GetChatRoomListParams, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChatRoom not implemented")
}

func RegisterCenterServerServer(s *grpc.Server, srv CenterServerServer) {
	s.RegisterService(&_CenterServer_serviceDesc, srv)
}

func _CenterServer_GetServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServerByIdParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenterServerServer).GetServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CenterServer/GetServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenterServerServer).GetServer(ctx, req.(*GetServerByIdParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenterServer_GetRoomMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMembersParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenterServerServer).GetRoomMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CenterServer/GetRoomMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenterServerServer).GetRoomMembers(ctx, req.(*GetMembersParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenterServer_OnDisconnectReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportDisconnectParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenterServerServer).OnDisconnectReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CenterServer/OnDisconnectReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenterServerServer).OnDisconnectReport(ctx, req.(*ReportDisconnectParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenterServer_OnServerChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportServerStatusParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenterServerServer).OnServerChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CenterServer/OnServerChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenterServerServer).OnServerChange(ctx, req.(*ReportServerStatusParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenterServer_CreateChatRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateChatRoomParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenterServerServer).CreateChatRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CenterServer/CreateChatRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenterServerServer).CreateChatRoom(ctx, req.(*CreateChatRoomParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenterServer_JoinChatRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinChatRoomParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenterServerServer).JoinChatRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CenterServer/JoinChatRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenterServerServer).JoinChatRoom(ctx, req.(*JoinChatRoomParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _CenterServer_GetChatRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChatRoomListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CenterServerServer).GetChatRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CenterServer/GetChatRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CenterServerServer).GetChatRoom(ctx, req.(*GetChatRoomListParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _CenterServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "core.CenterServer",
	HandlerType: (*CenterServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServer",
			Handler:    _CenterServer_GetServer_Handler,
		},
		{
			MethodName: "GetRoomMembers",
			Handler:    _CenterServer_GetRoomMembers_Handler,
		},
		{
			MethodName: "OnDisconnectReport",
			Handler:    _CenterServer_OnDisconnectReport_Handler,
		},
		{
			MethodName: "OnServerChange",
			Handler:    _CenterServer_OnServerChange_Handler,
		},
		{
			MethodName: "CreateChatRoom",
			Handler:    _CenterServer_CreateChatRoom_Handler,
		},
		{
			MethodName: "JoinChatRoom",
			Handler:    _CenterServer_JoinChatRoom_Handler,
		},
		{
			MethodName: "GetChatRoom",
			Handler:    _CenterServer_GetChatRoom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "center.proto",
}

func (m *GetServerByIdParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetServerByIdParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetServerByIdParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Category != 0 {
		i = encodeVarintCenter(dAtA, i, uint64(m.Category))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetServerByIdRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetServerByIdRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetServerByIdRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ServerId) > 0 {
		i -= len(m.ServerId)
		copy(dAtA[i:], m.ServerId)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.ServerId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintCenter(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetMembersParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetMembersParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetMembersParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ServerId) > 0 {
		i -= len(m.ServerId)
		copy(dAtA[i:], m.ServerId)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.ServerId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Rid) > 0 {
		i -= len(m.Rid)
		copy(dAtA[i:], m.Rid)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.Rid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetMembersRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetMembersRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetMembersRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.OnlineCount != 0 {
		i = encodeVarintCenter(dAtA, i, uint64(m.OnlineCount))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Ids) > 0 {
		for iNdEx := len(m.Ids) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Ids[iNdEx])
			copy(dAtA[i:], m.Ids[iNdEx])
			i = encodeVarintCenter(dAtA, i, uint64(len(m.Ids[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Count != 0 {
		i = encodeVarintCenter(dAtA, i, uint64(m.Count))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ReportDisconnectParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReportDisconnectParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReportDisconnectParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Category != 0 {
		i = encodeVarintCenter(dAtA, i, uint64(m.Category))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ServerId) > 0 {
		i -= len(m.ServerId)
		copy(dAtA[i:], m.ServerId)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.ServerId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ReportDisconnectRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReportDisconnectRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReportDisconnectRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintCenter(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ReportServerStatusParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReportServerStatusParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReportServerStatusParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Status != 0 {
		i = encodeVarintCenter(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ServerId) > 0 {
		i -= len(m.ServerId)
		copy(dAtA[i:], m.ServerId)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.ServerId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ReportServerStatusRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReportServerStatusRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReportServerStatusRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Code != 0 {
		i = encodeVarintCenter(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CreateChatRoomParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateChatRoomParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateChatRoomParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UserId) > 0 {
		i -= len(m.UserId)
		copy(dAtA[i:], m.UserId)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.UserId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateChatRoomRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateChatRoomRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateChatRoomRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ServerId) > 0 {
		i -= len(m.ServerId)
		copy(dAtA[i:], m.ServerId)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.ServerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RoomId) > 0 {
		i -= len(m.RoomId)
		copy(dAtA[i:], m.RoomId)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.RoomId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintCenter(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *JoinChatRoomParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JoinChatRoomParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JoinChatRoomParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UserId) > 0 {
		i -= len(m.UserId)
		copy(dAtA[i:], m.UserId)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.UserId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoomId) > 0 {
		i -= len(m.RoomId)
		copy(dAtA[i:], m.RoomId)
		i = encodeVarintCenter(dAtA, i, uint64(len(m.RoomId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *JoinChatRoomRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JoinChatRoomRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *JoinChatRoomRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Code != 0 {
		i = encodeVarintCenter(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetChatRoomListParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetChatRoomListParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetChatRoomListParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GetChatRoomListRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetChatRoomListRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetChatRoomListRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RoomIds) > 0 {
		for iNdEx := len(m.RoomIds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.RoomIds[iNdEx])
			copy(dAtA[i:], m.RoomIds[iNdEx])
			i = encodeVarintCenter(dAtA, i, uint64(len(m.RoomIds[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Code != 0 {
		i = encodeVarintCenter(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintCenter(dAtA []byte, offset int, v uint64) int {
	offset -= sovCenter(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetServerByIdParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	if m.Category != 0 {
		n += 1 + sovCenter(uint64(m.Category))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetServerByIdRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovCenter(uint64(m.Code))
	}
	l = len(m.ServerId)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetMembersParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Rid)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	l = len(m.ServerId)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetMembersRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Count != 0 {
		n += 1 + sovCenter(uint64(m.Count))
	}
	if len(m.Ids) > 0 {
		for _, s := range m.Ids {
			l = len(s)
			n += 1 + l + sovCenter(uint64(l))
		}
	}
	if m.OnlineCount != 0 {
		n += 1 + sovCenter(uint64(m.OnlineCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReportDisconnectParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	l = len(m.ServerId)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	if m.Category != 0 {
		n += 1 + sovCenter(uint64(m.Category))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReportDisconnectRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovCenter(uint64(m.Code))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReportServerStatusParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ServerId)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovCenter(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReportServerStatusRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovCenter(uint64(m.Code))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateChatRoomParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateChatRoomRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovCenter(uint64(m.Code))
	}
	l = len(m.RoomId)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	l = len(m.ServerId)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JoinChatRoomParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoomId)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovCenter(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JoinChatRoomRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovCenter(uint64(m.Code))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetChatRoomListParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetChatRoomListRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovCenter(uint64(m.Code))
	}
	if len(m.RoomIds) > 0 {
		for _, s := range m.RoomIds {
			l = len(s)
			n += 1 + l + sovCenter(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCenter(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCenter(x uint64) (n int) {
	return sovCenter(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetServerByIdParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetServerByIdParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetServerByIdParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Category", wireType)
			}
			m.Category = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Category |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetServerByIdRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetServerByIdRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetServerByIdRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetMembersParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetMembersParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetMembersParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetMembersRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetMembersRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetMembersRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			m.Count = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Count |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ids", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ids = append(m.Ids, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OnlineCount", wireType)
			}
			m.OnlineCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OnlineCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReportDisconnectParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReportDisconnectParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReportDisconnectParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Category", wireType)
			}
			m.Category = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Category |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReportDisconnectRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReportDisconnectRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReportDisconnectRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReportServerStatusParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReportServerStatusParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReportServerStatusParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReportServerStatusRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReportServerStatusRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReportServerStatusRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateChatRoomParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateChatRoomParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateChatRoomParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateChatRoomRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateChatRoomRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateChatRoomRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoomId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JoinChatRoomParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: JoinChatRoomParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: JoinChatRoomParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoomId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JoinChatRoomRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: JoinChatRoomRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: JoinChatRoomRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetChatRoomListParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetChatRoomListParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetChatRoomListParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetChatRoomListRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetChatRoomListRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetChatRoomListRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCenter
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCenter
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoomIds = append(m.RoomIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCenter(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCenter
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCenter(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCenter
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCenter
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCenter
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCenter
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCenter
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCenter        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCenter          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCenter = fmt.Errorf("proto: unexpected end of group")
)
